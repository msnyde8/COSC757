
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Workspace loaded from ~/.RData]

> #### Input data set plants scale into Data Frame "plantsData"
> votingData <- read.csv(file = "C:/Users/maryjoyce/Documents/Towson/Spring 2016/COSC 757/Assignments/Assignment4/UCI data/house-votes-84.data.txt", header = FALSE, sep = ",", stringsAsFactors = FALSE)
> votingData.ID<-seq.int(nrow(votingData))
> votingData[1:20,]
           V1 V2 V3 V4 V5 V6 V7 V8 V9 V10 V11 V12 V13 V14 V15 V16 V17
1  republican  n  y  n  y  y  y  n  n   n   y   ?   y   y   y   n   y
2  republican  n  y  n  y  y  y  n  n   n   n   n   y   y   y   n   ?
3    democrat  ?  y  y  ?  y  y  n  n   n   n   y   n   y   y   n   n
4    democrat  n  y  y  n  ?  y  n  n   n   n   y   n   y   n   n   y
5    democrat  y  y  y  n  y  y  n  n   n   n   y   ?   y   y   y   y
6    democrat  n  y  y  n  y  y  n  n   n   n   n   n   y   y   y   y
7    democrat  n  y  n  y  y  y  n  n   n   n   n   n   ?   y   y   y
8  republican  n  y  n  y  y  y  n  n   n   n   n   n   y   y   ?   y
9  republican  n  y  n  y  y  y  n  n   n   n   n   y   y   y   n   y
10   democrat  y  y  y  n  n  n  y  y   y   n   n   n   n   n   ?   ?
11 republican  n  y  n  y  y  n  n  n   n   n   ?   ?   y   y   n   n
12 republican  n  y  n  y  y  y  n  n   n   n   y   ?   y   y   ?   ?
13   democrat  n  y  y  n  n  n  y  y   y   n   n   n   y   n   ?   ?
14   democrat  y  y  y  n  n  y  y  y   ?   y   y   ?   n   n   y   ?
15 republican  n  y  n  y  y  y  n  n   n   n   n   y   ?   ?   n   ?
16 republican  n  y  n  y  y  y  n  n   n   y   n   y   y   ?   n   ?
17   democrat  y  n  y  n  n  y  n  y   ?   y   y   y   ?   n   n   y
18   democrat  y  ?  y  n  n  n  y  y   y   n   n   n   y   n   y   y
19 republican  n  y  n  y  y  y  n  n   n   n   n   ?   y   y   n   n
20   democrat  y  y  y  n  n  n  y  y   y   n   y   n   n   n   y   y
> votingData$V1 <- as.factor(votingData$V1)
> votingData$V2[votingData$V2=="y"]<-"2y"
> votingData$V2[votingData$V2=="n"]<-"2n"
> votingData$V2[votingData$V2=="?"]<-""
> votingData$V2 <- as.factor(votingData$V2)
> votingData$V3[votingData$V3=="y"]<-"3y"
> votingData$V3[votingData$V3=="n"]<-"3n"
> votingData$V3[votingData$V3=="?"]<-""
> votingData$V3 <- as.factor(votingData$V3)
> votingData$V4[votingData$V4=="y"]<-"4y"
> votingData$V4[votingData$V4=="n"]<-"4n"
> votingData$V4[votingData$V4=="?"]<-""
> votingData$V4 <- as.factor(votingData$V4)
> votingData$V5[votingData$V5=="y"]<-"5y"
> votingData$V5[votingData$V5=="n"]<-"5n"
> votingData$V5[votingData$V5=="?"]<-""
> votingData$V5 <- as.factor(votingData$V5)
> votingData$V6[votingData$V6=="y"]<-"6y"
> votingData$V6[votingData$V6=="n"]<-"6n"
> votingData$V6[votingData$V6=="?"]<-""
> votingData$V6 <- as.factor(votingData$V6)
> votingData$V7[votingData$V7=="y"]<-"7y"
> votingData$V7[votingData$V7=="n"]<-"7n"
> votingData$V7[votingData$V7=="?"]<-""
> votingData$V7 <- as.factor(votingData$V2)
> votingData$V8[votingData$V8=="y"]<-"8y"
> votingData$V8[votingData$V8=="n"]<-"8n"
> votingData$V8[votingData$V8=="?"]<-""
> votingData$V8 <- as.factor(votingData$V2)
> votingData$V9[votingData$V9=="y"]<-"9y"
> votingData$V9[votingData$V9=="n"]<-"9n"
> votingData$V9[votingData$V9=="?"]<-""
> votingData$V9 <- as.factor(votingData$V2)
> votingData$V10[votingData$V10=="y"]<-"10y"
> votingData$V10[votingData$V10=="n"]<-"10n"
> votingData$V10[votingData$V10=="?"]<-""
> votingData$V10 <- as.factor(votingData$V2)
> votingData$V11[votingData$V11=="y"]<-"11y"
> votingData$V11[votingData$V11=="n"]<-"11n"
> votingData$V11[votingData$V11=="?"]<-""
> votingData$V11 <- as.factor(votingData$V2)
> votingData$V12[votingData$V12=="y"]<-"12y"
> votingData$V12[votingData$V12=="n"]<-"12n"
> votingData$V12[votingData$V12=="?"]<-""
> votingData$V12 <- as.factor(votingData$V12)
> votingData$V13[votingData$V13=="y"]<-"13y"
> votingData$V13[votingData$V13=="n"]<-"13n"
> votingData$V13[votingData$V13=="?"]<-""
> votingData$V13 <- as.factor(votingData$V13)
> votingData$V14[votingData$V14=="y"]<-"14y"
> votingData$V14[votingData$V14=="n"]<-"14n"
> votingData$V14[votingData$V14=="?"]<-""
> votingData$V14 <- as.factor(votingData$V14)
> votingData$V15[votingData$V15=="y"]<-"15y"
> votingData$V15[votingData$V15=="n"]<-"15n"
> votingData$V15[votingData$V15=="?"]<-""
> votingData$V15 <- as.factor(votingData$V15)
> votingData$V16[votingData$V16=="y"]<-"16y"
> votingData$V16[votingData$V16=="n"]<-"16n"
> votingData$V16[votingData$V16=="?"]<-""
> votingData$V16 <- as.factor(votingData$V16)
> votingData$V17[votingData$V17=="y"]<-"17y"
> votingData$V17[votingData$V17=="n"]<-"17n"
> votingData$V17[votingData$V17=="?"]<-""
> votingData$V17 <- as.factor(votingData$V17)
> votingData[1:20,]
           V1 V2 V3 V4 V5 V6 V7 V8 V9 V10 V11 V12 V13 V14 V15 V16 V17
1  republican 2n 3y 4n 5y 6y 2n 2n 2n  2n  2n     13y 14y 15y 16n 17y
2  republican 2n 3y 4n 5y 6y 2n 2n 2n  2n  2n 12n 13y 14y 15y 16n    
3    democrat    3y 4y    6y                  12y 13n 14y 15y 16n 17n
4    democrat 2n 3y 4y 5n    2n 2n 2n  2n  2n 12y 13n 14y 15n 16n 17y
5    democrat 2y 3y 4y 5n 6y 2y 2y 2y  2y  2y 12y     14y 15y 16y 17y
6    democrat 2n 3y 4y 5n 6y 2n 2n 2n  2n  2n 12n 13n 14y 15y 16y 17y
7    democrat 2n 3y 4n 5y 6y 2n 2n 2n  2n  2n 12n 13n     15y 16y 17y
8  republican 2n 3y 4n 5y 6y 2n 2n 2n  2n  2n 12n 13n 14y 15y     17y
9  republican 2n 3y 4n 5y 6y 2n 2n 2n  2n  2n 12n 13y 14y 15y 16n 17y
10   democrat 2y 3y 4y 5n 6n 2y 2y 2y  2y  2y 12n 13n 14n 15n        
11 republican 2n 3y 4n 5y 6y 2n 2n 2n  2n  2n         14y 15y 16n 17n
12 republican 2n 3y 4n 5y 6y 2n 2n 2n  2n  2n 12y     14y 15y        
13   democrat 2n 3y 4y 5n 6n 2n 2n 2n  2n  2n 12n 13n 14y 15n        
14   democrat 2y 3y 4y 5n 6n 2y 2y 2y  2y  2y 12y     14n 15n 16y    
15 republican 2n 3y 4n 5y 6y 2n 2n 2n  2n  2n 12n 13y         16n    
16 republican 2n 3y 4n 5y 6y 2n 2n 2n  2n  2n 12n 13y 14y     16n    
17   democrat 2y 3n 4y 5n 6n 2y 2y 2y  2y  2y 12y 13y     15n 16n 17y
18   democrat 2y    4y 5n 6n 2y 2y 2y  2y  2y 12n 13n 14y 15n 16y 17y
19 republican 2n 3y 4n 5y 6y 2n 2n 2n  2n  2n 12n     14y 15y 16n 17n
20   democrat 2y 3y 4y 5n 6n 2y 2y 2y  2y  2y 12y 13n 14n 15n 16y 17y
> 
> library("arules", lib.loc="~/R/win-library/3.2")
Loading required package: Matrix

Attaching package: ‘arules’

The following objects are masked from ‘package:base’:

    abbreviate, write

Warning message:
package ‘arules’ was built under R version 3.2.5 
> library(datasets)
> #votingBaskets <- read.transactions(file = "C:/Users/maryjoyce/Documents/Towson/Spring 2016/COSC 757/Assignments/Assignment4/UCI data/house-votes-84.data.txt", format="basket", sep = ",")
> # Inspect the dataset
> votingBaskets <- as(votingData,"transactions")
> summary(votingBaskets)
transactions as itemMatrix in sparse format with
 435 rows (elements/itemsets/transactions) and
 50 columns (items) and a density of 0.34 

most frequent items:
    V17=17y V1=democrat     V12=12n       V4=4y     V15=15y     (Other) 
        269         267         264         253         248        6094 

element (itemset/transaction) length distribution:
sizes
 17 
435 

   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
     17      17      17      17      17      17 

includes extended item information - examples:
         labels variables     levels
1   V1=democrat        V1   democrat
2 V1=republican        V1 republican
3           V2=        V2           

includes extended transaction information - examples:
  transactionID
1             1
2             2
3             3
> votingBaskets[1:2,]
transactions in sparse format with
 2 transactions (rows) and
 50 items (columns)
> # plot the data
> itemFrequencyPlot(votingBaskets, support=0.1, cex.names=0.8)
> 
> 
> ## Apriori Algorithm
> # association rules
> rules <- apriori(votingBaskets, parameter = list(support=0.01, confidence=0.6, minlen=2))
Apriori

Parameter specification:
 confidence minval smax arem  aval originalSupport support minlen maxlen target   ext
        0.6    0.1    1 none FALSE            TRUE    0.01      2     10  rules FALSE

Algorithmic control:
 filter tree heap memopt load sort verbose
    0.1 TRUE TRUE  FALSE TRUE    2    TRUE

Absolute minimum support count: 4 

set item appearances ...[0 item(s)] done [0.00s].
set transactions ...[50 item(s), 435 transaction(s)] done [0.00s].
sorting and recoding items ... [50 item(s)] done [0.00s].
creating transaction tree ... done [0.00s].
checking subsets of size 1 2 3 4 5 6 7 8 9 10 done [1.40s].
writing ... [12694268 rule(s)] done [2.80s].
creating S4 object  ... done [6.41s].
> # subset of rules
> rulesDemocrat <- subset(rules, subset=rhs%in%"V1=democrat")
> rulesRepublican <- subset(rules, subset=rhs%in%"V1=republican")
> inspect(sort(rulesDemocrat, by="confidence")[1:5])
    lhs              rhs           support    confidence lift    
549 {V5=,V12=12y} => {V1=democrat} 0.01149425 1          1.629213
551 {V3=3y,V5=}   => {V1=democrat} 0.01149425 1          1.629213
557 {V5=,V13=13n} => {V1=democrat} 0.01379310 1          1.629213
559 {V4=4y,V5=}   => {V1=democrat} 0.01149425 1          1.629213
562 {V5=,V17=17y} => {V1=democrat} 0.01149425 1          1.629213
> inspect(sort(rulesRepublican, by="confidence")[1:5])
     lhs               rhs             support    confidence lift    
1336 {V4=4n,V15=}   => {V1=republican} 0.01149425 1          2.589286
1338 {V5=5y,V15=}   => {V1=republican} 0.01379310 1          2.589286
1554 {V4=4n,V12=}   => {V1=republican} 0.01379310 1          2.589286
1556 {V5=5y,V12=}   => {V1=republican} 0.01609195 1          2.589286
2042 {V13=13y,V16=} => {V1=republican} 0.01609195 1          2.589286
> 
> 
> ## Eclat Algorithm
> itemsets <- eclat(votingBaskets, parameter = list(sup=0.1, minlen=3, maxlen=15))
Eclat

parameter specification:
 tidLists support minlen maxlen            target   ext
    FALSE     0.1      3     15 frequent itemsets FALSE

algorithmic control:
 sparse sort verbose
      7   -2    TRUE

Absolute minimum support count: 43 

create itemset ... 
set transactions ...[50 item(s), 435 transaction(s)] done [0.00s].
sorting and recoding items ... [36 item(s)] done [0.00s].
creating bit matrix ... [36 row(s), 435 column(s)] done [0.00s].
writing  ... [153101 set(s)] done [0.02s].
Creating S4 object  ... done [0.06s].
> fsets <- eclat(votingBaskets, parameter=list(sup=0.01, minlen=3))
Eclat

parameter specification:
 tidLists support minlen maxlen            target   ext
    FALSE    0.01      3     10 frequent itemsets FALSE

algorithmic control:
 sparse sort verbose
      7   -2    TRUE

Absolute minimum support count: 4 

create itemset ... 
set transactions ...[50 item(s), 435 transaction(s)] done [0.00s].
sorting and recoding items ... [50 item(s)] done [0.00s].
creating bit matrix ... [50 row(s), 435 column(s)] done [0.00s].
writing  ... [1984515 set(s)] done [0.33s].
Creating S4 object  ... done [0.80s].
> fsets.top5 <- sort(fsets)[1:5]
> inspect(fsets.top5)
        items                                   support  
1980630 {V2=2n,V7=2n,V8=2n,V9=2n,V10=2n,V11=2n} 0.5425287
1980756 {V2=2n,V8=2n,V9=2n,V10=2n,V11=2n}       0.5425287
1980757 {V7=2n,V8=2n,V9=2n,V10=2n,V11=2n}       0.5425287
1980883 {V2=2n,V7=2n,V9=2n,V10=2n,V11=2n}       0.5425287
1981010 {V2=2n,V9=2n,V10=2n,V11=2n}             0.5425287
> rulesDem <- subset(itemsets, subset=items%in%"V1=democrat")
> rulesRep <- subset(itemsets, subset=items%in%"V1=republican")
> inspect(sort(rulesDem, by="support")[1:5])
       items                             support  
153087 {V1=democrat,V4=4y,V5=5n}         0.5034483
151540 {V1=democrat,V5=5n,V13=13n}       0.4620690
146989 {V1=democrat,V5=5n,V6=6n}         0.4459770
151553 {V1=democrat,V4=4y,V13=13n}       0.4413793
151533 {V1=democrat,V4=4y,V5=5n,V13=13n} 0.4275862
> inspect(sort(rulesRep, by="support")[1:5])
      items                               support  
39992 {V1=republican,V5=5y,V6=6y}         0.3586207
39984 {V1=republican,V5=5y,V15=15y}       0.3563218
45197 {V1=republican,V6=6y,V15=15y}       0.3425287
38961 {V1=republican,V5=5y,V6=6y,V15=15y} 0.3402299
22973 {V1=republican,V4=4n,V5=5y}         0.3218391
> 
> rules2 <- apriori(votingBaskets, parameter = list(support=0.01, confidence=0.6, minlen=3, maxlen=15))
Apriori

Parameter specification:
 confidence minval smax arem  aval originalSupport support minlen maxlen target   ext
        0.6    0.1    1 none FALSE            TRUE    0.01      3     15  rules FALSE

Algorithmic control:
 filter tree heap memopt load sort verbose
    0.1 TRUE TRUE  FALSE TRUE    2    TRUE

Absolute minimum support count: 4 

set item appearances ...[0 item(s)] done [0.00s].
set transactions ...[50 item(s), 435 transaction(s)] done [0.00s].
sorting and recoding items ... [50 item(s)] done [0.00s].
creating transaction tree ... done [0.00s].
checking subsets of size 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 done [2.00s].
writing ... [16512225 rule(s)] done [4.05s].
creating S4 object  ... done [8.52s].
> rulesDemocrat2 <- subset(rules2, subset=rhs%in%"V1=democrat")
> rulesRepublican2 <- subset(rules2, subset=rhs%in%"V1=republican")
> inspect(sort(rulesDemocrat2, by="support")[1:5])
      lhs                      rhs           support   confidence lift    
8571  {V4=4y,V5=5n}         => {V1=democrat} 0.5034483 1.0000000  1.629213
8061  {V5=5n,V13=13n}       => {V1=democrat} 0.4620690 0.9950495  1.621148
7643  {V5=5n,V6=6n}         => {V1=democrat} 0.4459770 0.9948718  1.620859
8074  {V4=4y,V13=13n}       => {V1=democrat} 0.4413793 0.9552239  1.556264
73715 {V4=4y,V5=5n,V13=13n} => {V1=democrat} 0.4275862 1.0000000  1.629213
> inspect(sort(rulesRepublican2, by="support")[1:5])
      lhs                      rhs             support   confidence lift    
3636  {V5=5y,V6=6y}         => {V1=republican} 0.3586207 0.9285714  2.404337
3662  {V5=5y,V15=15y}       => {V1=republican} 0.3563218 0.9226190  2.388924
3839  {V6=6y,V15=15y}       => {V1=republican} 0.3425287 0.7680412  1.988678
37784 {V5=5y,V6=6y,V15=15y} => {V1=republican} 0.3402299 0.9250000  2.395089
3546  {V4=4n,V5=5y}         => {V1=republican} 0.3218391 0.9589041  2.482877
